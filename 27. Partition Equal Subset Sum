Input: nums = [1,5,11,5]
Output: true
Explanation: The array can be partitioned as [1, 5, 5] and [11].


class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum=accumulate(nums.begin(), nums.end(), 0);
        if (sum % 2) { return false; }
        int half = sum / 2;
        if (*max_element(nums.begin(), nums.end()) > half) { return false; }
        vector<bool> reach(half+1, false);
        reach[0]=1;
        for (auto num : nums){
            for (int i=half; i >= num; i--){
                if (reach[i-num]) {
                    reach[i]=true;
                    if (reach[half]) { return true; }
                }
            }
        }
        return false;
    }
};
